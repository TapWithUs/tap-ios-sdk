#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9 effective-4.1.50 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
#ifndef TAPKIT_SWIFT_H
#define TAPKIT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TAPKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC6TAPKit6Point3")
@interface Point3 : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

SWIFT_CLASS("_TtC6TAPKit13RawSensorData")
@interface RawSensorData : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger iIMU_GYRO;)
+ (NSInteger)iIMU_GYRO SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger iIMU_ACCELEROMETER;)
+ (NSInteger)iIMU_ACCELEROMETER SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger iDEV_THUMB;)
+ (NSInteger)iDEV_THUMB SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger iDEV_INDEX;)
+ (NSInteger)iDEV_INDEX SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger iDEV_MIDDLE;)
+ (NSInteger)iDEV_MIDDLE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger iDEV_RING;)
+ (NSInteger)iDEV_RING SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger iDEV_PINKY;)
+ (NSInteger)iDEV_PINKY SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)rawStringWithDelimeter:(NSString * _Nonnull)delimeter SWIFT_WARN_UNUSED_RESULT;
- (Point3 * _Nullable)getPointFor:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, RawSensorDataType, closed) {
  RawSensorDataTypeNone = 0,
  RawSensorDataTypeIMU = 1,
  RawSensorDataTypeDevice = 2,
};

typedef SWIFT_ENUM(NSInteger, TAPAirGesture, closed) {
  TAPAirGestureOneFingerUp = 2,
  TAPAirGestureTwoFingersUp = 3,
  TAPAirGestureOneFingerDown = 4,
  TAPAirGestureTwoFingersDown = 5,
  TAPAirGestureOneFingerLeft = 6,
  TAPAirGestureTwoFingersLeft = 7,
  TAPAirGestureOnefingerRight = 8,
  TAPAirGestureTwoFingersRight = 9,
  TAPAirGestureIndexToThumbTouch = 10,
  TAPAirGestureMiddleToThumbTouch = 11,
};


SWIFT_CLASS("_TtC6TAPKit14TAPCombination")
@interface TAPCombination : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger allFingers;)
+ (NSInteger)allFingers SWIFT_WARN_UNUSED_RESULT;
+ (uint8_t)fromFingers:(BOOL)thumb :(BOOL)index :(BOOL)middle :(BOOL)ring :(BOOL)pinky SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSNumber *> * _Nonnull)toFingerNumbers:(uint8_t)combination SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)combinationSpeakableStringFor:(uint8_t)combination SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSNumber *> * _Nonnull)toFingers:(uint8_t)combination SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)fingerName:(NSInteger)finger SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC6TAPKit9TAPHandle")
@interface TAPHandle : NSObject
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class CBPeripheral;
@class CBService;
@class CBCharacteristic;

@interface TAPHandle (SWIFT_EXTENSION(TAPKit)) <CBPeripheralDelegate>
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverServices:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didDiscoverCharacteristicsForService:(CBService * _Nonnull)service error:(NSError * _Nullable)error;
- (void)peripheral:(CBPeripheral * _Nonnull)peripheral didUpdateValueForCharacteristic:(CBCharacteristic * _Nonnull)characteristic error:(NSError * _Nullable)error;
@end

@class TAPRawSensorSensitivity;

SWIFT_CLASS("_TtC6TAPKit12TAPInputMode")
@interface TAPInputMode : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kController;)
+ (NSString * _Nonnull)kController SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kText;)
+ (NSString * _Nonnull)kText SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kRawSensor;)
+ (NSString * _Nonnull)kRawSensor SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kControllerWithMouseHID;)
+ (NSString * _Nonnull)kControllerWithMouseHID SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kControllerWithFullHID;)
+ (NSString * _Nonnull)kControllerWithFullHID SWIFT_WARN_UNUSED_RESULT;
+ (TAPInputMode * _Nonnull)controller SWIFT_WARN_UNUSED_RESULT;
+ (TAPInputMode * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
+ (TAPInputMode * _Nonnull)rawSensorWithSensitivity:(TAPRawSensorSensitivity * _Nonnull)sensitivity SWIFT_WARN_UNUSED_RESULT;
+ (TAPInputMode * _Nonnull)controllerWithMouseHID SWIFT_WARN_UNUSED_RESULT;
+ (TAPInputMode * _Nonnull)controllerWithFullHID SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class TAPKitLog;

SWIFT_CLASS("_TtC6TAPKit6TAPKit")
@interface TAPKit : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TAPKit * _Nonnull sharedKit;)
+ (TAPKit * _Nonnull)sharedKit SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TAPKitLog * _Nonnull log;)
+ (TAPKitLog * _Nonnull)log SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@protocol TAPKitDelegate;

@interface TAPKit (SWIFT_EXTENSION(TAPKit))
- (void)start;
- (void)addDelegate:(id <TAPKitDelegate> _Nonnull)delegate;
- (void)removeDelegate:(id <TAPKitDelegate> _Nonnull)delegate;
- (void)setDefaultTAPInputMode:(TAPInputMode * _Nonnull)defaultMode immediate:(BOOL)immediate;
- (void)setTAPInputMode:(TAPInputMode * _Nonnull)newMode forIdentifiers:(NSArray<NSString *> * _Nullable)identifiers;
- (NSDictionary<NSString *, NSString *> * _Nonnull)getConnectedTaps SWIFT_WARN_UNUSED_RESULT;
- (void)vibrateWithDurations:(NSArray<NSNumber *> * _Nonnull)durations forIdentifiers:(NSArray<NSString *> * _Nullable)identifiers;
- (void)readHardwareVersionForIdentifiers:(NSArray<NSString *> * _Nullable)identifiers;
- (void)readFirmwareVersionForIdentifiers:(NSArray<NSString *> * _Nullable)identifiers;
@end


SWIFT_PROTOCOL("_TtP6TAPKit14TAPKitDelegate_")
@protocol TAPKitDelegate
@optional
- (void)tapConnectedWithIdentifier:(NSString * _Nonnull)identifier name:(NSString * _Nonnull)name fw:(NSInteger)fw;
- (void)tapDisconnectedWithIdentifier:(NSString * _Nonnull)identifier;
- (void)tapFailedToConnectWithIdentifier:(NSString * _Nonnull)identifier name:(NSString * _Nonnull)name;
- (void)tappedWithIdentifier:(NSString * _Nonnull)identifier combination:(uint8_t)combination multitap:(uint8_t)multitap;
- (void)mousedWithIdentifier:(NSString * _Nonnull)identifier velocityX:(int16_t)velocityX velocityY:(int16_t)velocityY isMouse:(BOOL)isMouse;
- (void)rawSensorDataReceivedWithIdentifier:(NSString * _Nonnull)identifier data:(RawSensorData * _Nonnull)data;
- (void)tapChangedAirGesturesStateWithIdentifier:(NSString * _Nonnull)identifier isInAirGesturesState:(BOOL)isInAirGesturesState;
- (void)tapAirGesturedWithIdentifier:(NSString * _Nonnull)identifier gesture:(enum TAPAirGesture)gesture;
- (void)tapDidReadHardwareVersionWithIdentifier:(NSString * _Nonnull)identifier hw:(NSInteger)hw;
- (void)tapDidReadFirmwareVersionWithIdentifier:(NSString * _Nonnull)identifier fw:(NSInteger)fw;
@end

enum TAPKitLogEvent : NSInteger;

SWIFT_CLASS("_TtC6TAPKit9TAPKitLog")
@interface TAPKitLog : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TAPKitLog * _Nonnull sharedLog;)
+ (TAPKitLog * _Nonnull)sharedLog SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
- (void)enableWithEvent:(enum TAPKitLogEvent)event;
- (void)disableWithEvent:(enum TAPKitLogEvent)event;
- (void)disableAllEvents;
- (void)enableAllEvents;
@end

typedef SWIFT_ENUM(NSInteger, TAPKitLogEvent, closed) {
  TAPKitLogEventWarning = 0,
  TAPKitLogEventError = 1,
  TAPKitLogEventInfo = 2,
  TAPKitLogEventFatal = 3,
};


SWIFT_CLASS("_TtC6TAPKit23TAPRawSensorSensitivity")
@interface TAPRawSensorSensitivity : NSObject
@property (nonatomic) uint8_t deviceAccelerometer;
@property (nonatomic) uint8_t imuGyro;
@property (nonatomic) uint8_t imuAccelerometer;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDeviceAccelerometer:(NSInteger)deviceAccelerometer imuGyro:(NSInteger)imuGyro imuAccelerometer:(NSInteger)imuAccelerometer OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
